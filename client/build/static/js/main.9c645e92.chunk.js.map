{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/auth.js","utils/queries.js","utils/helpers.js","components/CategoryMenu/index.js","components/RestaurantCard/index.js","assets/spinner.gif","components/RestaurantList/index.js","components/SearchBar/index.js","components/CartItem/index.js","components/Cart/index.js","pages/Home.js","utils/mutations.js","pages/Signup.js","pages/Login.js","pages/Profile.js","pages/About.js","pages/Contact.js","components/MenuItemCard/index.js","components/MenuList/index.js","pages/Restaurant.js","components/Header/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","reducer","state","action","type","products","cartOpen","cart","product","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","QUERY_ALL_RESTAURANTS","gql","QUERY_ME","QUERY_CHECKOUT","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","CategoryMenu","RestaurantCard","name","description","image","price","className","to","src","alt","RestaurantList","useQuery","loading","data","restaurants","restaurant","spinner","SearchBar","userLocation","placeholder","lat","lng","icon","faSearch","CartItem","item","onChange","target","parseInt","role","onClick","removeFromCart","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","React","useState","setUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ADD_USER","LOGIN_USER","Signup","username","email","password","formState","setFormState","useMutation","addUser","error","handleChange","event","handleFormSubmit","preventDefault","login","onSubmit","class","for","style","cursor","message","Login","Profile","id","useParams","user","me","getProfile","About","Contact","rows","MenuItemCard","itemInCart","find","cartItem","MenuList","currMenuList","Restaurant","Header","logout","Footer","useLocation","history","useHistory","pathname","goBack","faFacebook","faInstagram","faTwitter","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c645e92.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState)\r\n}","import React, { createContext, useContext } from \"react\";\r\nimport { useProductReducer } from \"./reducers\";\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useProductReducer({\r\n    products: [],\r\n    cart: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: '',\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { gql } from \"@apollo/client\";\r\nexport const QUERY_CATEGORIES = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\nexport const QUERY_RESTAURANTS_BY_CATEGORY = gql`\r\n  query getRestaurantsByCategory($categoryId: ID) {\r\n    restaurants(categoryId: $categoryId) {\r\n      _id\r\n      name\r\n      description\r\n      image\r\n      price\r\n    }\r\n  }\r\n`;\r\nexport const QUERY_ALL_RESTAURANTS = gql`\r\n  query restaurants {\r\n    restaurants {\r\n      _id\r\n      name\r\n      description\r\n      image\r\n      price\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport const QUERY_ME = gql`\r\n  query me {\r\n    me {\r\n      _id\r\n      username\r\n      email\r\n    }\r\n  }\r\n`;\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($productIds: [ID]!) {\r\n    checkout(productIds: $productIds) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n","export function pluralize(name, count) {\r\n    if (count === 1) {\r\n        return name;\r\n    }\r\n    return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n    return new Promise((resolve, reject) => {\r\n        const request = window.indexedDB.open('shop-shop', 1);\r\n        let db, tx, store;\r\n        request.onupgradeneeded = function (e) {\r\n            const db = request.result;\r\n            db.createObjectStore('products', { keyPath: '_id' });\r\n            db.createObjectStore('categories', { keyPath: '_id' });\r\n            db.createObjectStore('cart', { keyPath: '_id' });\r\n        };\r\n\r\n        request.onerror = function (e) {\r\n            console.log('There was an error');\r\n        };\r\n\r\n        request.onsuccess = function (e) {\r\n            db = request.result;\r\n            tx = db.transaction(storeName, 'readwrite');\r\n            store = tx.objectStore(storeName);\r\n\r\n            db.onerror = function (e) {\r\n                console.log('error', e);\r\n            };\r\n\r\n            switch (method) {\r\n                case 'put':\r\n                    store.put(object);\r\n                    resolve(object);\r\n                    break;\r\n                case 'get':\r\n                    const all = store.getAll();\r\n                    all.onsuccess = function () {\r\n                        resolve(all.result);\r\n                    };\r\n                    break;\r\n                case 'delete':\r\n                    store.delete(object._id);\r\n                    break;\r\n                default:\r\n                    console.log('No valid method');\r\n                    break;\r\n            }\r\n\r\n            tx.oncomplete = function () {\r\n                db.close();\r\n            };\r\n        };\r\n    });\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n//   const [state, dispatch] = useStoreContext();\r\n  // console.log(useStoreContext());\r\n\r\n//   const { categories } = state;\r\n\r\n//   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n//   useEffect(() => {\r\n//     if (categoryData) {\r\n//       dispatch({\r\n//         type: UPDATE_CATEGORIES,\r\n//         categories: categoryData.categories,\r\n//       });\r\n//       categoryData.categories.forEach((category) => {\r\n//         idbPromise('categories', 'put', category);\r\n//       });\r\n//     } else if (!loading) {\r\n//       idbPromise('categories', 'get').then((categories) => {\r\n//         dispatch({\r\n//           type: UPDATE_CATEGORIES,\r\n//           categories: categories,\r\n//         });\r\n//       });\r\n//     }\r\n//   }, [categoryData, loading, dispatch]);\r\n\r\n//   const handleClick = (id) => {\r\n//     dispatch({\r\n//       type: UPDATE_CURRENT_CATEGORY,\r\n//       currentCategory: id,\r\n//     });\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {/* <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RestaurantCard = ({_id, name, description, image, price }) => {\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n            <Link to={`/restaurants/${_id}`}>\r\n                <img className=\"w-full\" src={`/images/${image}`} alt=\"\" />\r\n            </Link>\r\n            <h2 className=\"font-bold text-xl mb-2 ml-2\">{name}</h2>\r\n            <h3 className=\"ml-3\">{description}</h3>\r\n            <div className=\"flex justify-around m-3\">\r\n                <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">35-45 mins</span>\r\n                <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">${price} Fee</span>\r\n                <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">5 stars</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RestaurantCard;","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\r\nimport RestaurantCard from '../RestaurantCard';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\n// import { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_RESTAURANTS_BY_CATEGORY, QUERY_ALL_RESTAURANTS } from '../../utils/queries';\r\n// import { idbPromise } from '../../utils/helpers';\r\nimport spinner from '../../assets/spinner.gif';\r\n\r\nfunction RestaurantList() {\r\n  // const [state, dispatch] = useStoreContext();\r\n  // const { currentCategory } = state;\r\n  const { loading, data } = useQuery(QUERY_ALL_RESTAURANTS);\r\n  const restaurants = data?.restaurants || [];\r\n\r\n  // useEffect(() => {\r\n  //   if (data) {\r\n  //     // dispatch({\r\n  //     //   type: UPDATE_PRODUCTS,\r\n  //     //   restaurants: data.restaurants,\r\n  //     // });\r\n  //     data.restaurants.forEach((restaurant) => {\r\n  //       idbPromise('restaurants', 'put', restaurant);\r\n  //     });\r\n  //   } else if (!loading) {\r\n  //     idbPromise('restaurants', 'get').then((restaurants) => {\r\n  //       dispatch({\r\n  //         type: UPDATE_PRODUCTS,\r\n  //         restaurants: restaurants,\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // }, [data, loading, dispatch]);\r\n\r\n  // function filterRestaurants() {\r\n  //   // if (!currentCategory) {\r\n  //   //   return state.restaurants;\r\n  //   // }\r\n\r\n  //   return state.restaurants.filter(\r\n  //     (restaurant) => restaurant.category._id === currentCategory\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div className=\"flex-col m-2\">\r\n      <h2 className=\"text-xl font-bold\">Available Restaurants:</h2>\r\n      {restaurants.length ? (\r\n        <div className=\"flex justify-center p-4\">\r\n          <div className=\"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3  grid-flow-row gap-10\">\r\n            {restaurants.map((restaurant) => (\r\n              <RestaurantCard\r\n                key={restaurant._id}\r\n                _id={restaurant._id}\r\n                image={restaurant.image}\r\n                name={restaurant.name}\r\n                description={restaurant.description}\r\n                price={restaurant.price}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any restaurants yet!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantList;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const SearchBar = ({ userLocation }) => {\r\n  return (\r\n    <div className=\"map-back\">\r\n      <div className=\"container h-96 flex justify-center items-center px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"h-14 w-96 pr-8 pl-5 rounded z-0 focus:shadow focus:outline-none\"\r\n            placeholder={\r\n              userLocation\r\n                ? `${userLocation.lat}, ${userLocation.lng}`\r\n                : \"Enter your delivery address\"\r\n            }\r\n          />\r\n          <div className=\"absolute top-4 right-3\">\r\n            <FontAwesomeIcon\r\n              className=\"text-gray-400 z-20 hover:text-gray-500\"\r\n              icon={faSearch}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n  const [, dispatch] = useStoreContext();\r\n\r\n  const removeFromCart = (item) => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise(\"cart\", \"delete\", { ...item });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === \"0\") {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise(\"cart\", \"delete\", { ...item });\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-row border-2\">\r\n      <div>\r\n        <img className=\"max-w-xs p-8\" src={`/images/${item.image}`} alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <div>\r\n          {item.name}, ${item.price}\r\n        </div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n    const [state, dispatch] = useStoreContext();\r\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n      useEffect(() => {\r\n        if (data) {\r\n          stripePromise.then((res) => {\r\n            res.redirectToCheckout({ sessionId: data.checkout.session });\r\n          });\r\n        }\r\n      }, [data]);\r\n\r\n    useEffect(() => {\r\n        async function getCart() {\r\n            const cart = await idbPromise('cart', 'get');\r\n            dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n        }\r\n\r\n        if (!state.cart.length) {\r\n            getCart();\r\n        }\r\n    }, [state.cart.length, dispatch]);\r\n\r\n    function toggleCart() {\r\n        dispatch({ type: TOGGLE_CART });\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let sum = 0;\r\n        state.cart.forEach((item) => {\r\n            sum += item.price * item.purchaseQuantity;\r\n        });\r\n        return sum.toFixed(2);\r\n    }\r\n\r\n    function submitCheckout() {\r\n        const productIds = [];\r\n\r\n        state.cart.forEach((item) => {\r\n            for (let i = 0; i < item.purchaseQuantity; i++) {\r\n                productIds.push(item._id);\r\n            }\r\n        });\r\n\r\n        getCheckout({\r\n            variables: { products: productIds },\r\n        });\r\n    }\r\n\r\n    if (!state.cartOpen) {\r\n        return (\r\n            <div className=\"cart-closed\" onClick={toggleCart}>\r\n                <span role=\"img\" aria-label=\"trash\">\r\n                    🛒\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed top-0 right-0 min-w-min-1/5 max-w-max-2/5 bg-white border-2 overflow-auto max-h-80\">\r\n            <div className=\"close\" onClick={toggleCart}>\r\n                [close]\r\n            </div>\r\n            <h2>Your Order:</h2>\r\n            {state.cart.length ? (\r\n                <div>\r\n                    {state.cart.map((item) => (\r\n                        <CartItem key={item._id} item={item} />\r\n                    ))}\r\n\r\n                    <div className=\"flex flex-row justify-between items-center\">\r\n                        <strong>Total: ${calculateTotal()}</strong>\r\n\r\n                        {Auth.loggedIn() ? (\r\n                            <button onClick={submitCheckout}>Checkout</button>\r\n                        ) : (\r\n                            <span>(log in to check out)</span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <h3>\r\n                    <span role=\"img\" aria-label=\"shocked\">\r\n                        😱\r\n                    </span>\r\n                    You haven't added anything to your cart yet!\r\n                </h3>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","// Node Modules\r\nimport React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n// Utilities\r\nimport Auth from \"../utils/auth\";\r\n// import { QUERY_USERS } from '../utils/queries';\r\n// Components\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport RestaurantList from \"../components/RestaurantList\";\r\n// import UserList from \"../components/UserList\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Home = () => {\r\n  const [userLocation, setUserLocation] = React.useState(null);\r\n  // const { loading, data } = useQuery(QUERY_USERS);\r\n  // const users = data?.users || [];\r\n\r\n  const handleClick = () => {\r\n    console.log(\"click\");\r\n    if (\"geolocation\" in navigator) {\r\n      console.log(\"Available\");\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setUserLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude\r\n        });\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n      });\r\n    } else {\r\n      console.log(\"Not Available\");\r\n    }\r\n  };\r\n  // const renderUsername = () => {\r\n  //   if (!Auth.loggedIn()) return null;\r\n  //   return Auth.getProfile().data.username;\r\n  // };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-col justify-center\">\r\n        {/*  */}\r\n        {/* <div\r\n          className=\"col-12 col-md-10 mb-3 p-3\"\r\n          style={{ border: '1px dotted #1a1a1a' }}\r\n        >\r\n          {renderUsername()}\r\n        </div> */}\r\n\r\n        <button onClick={() => handleClick()}>Get Location</button>\r\n        {userLocation ? (\r\n          <h3>\r\n            <strong>\r\n              Your Location <br />\r\n            </strong>\r\n            Longitude: {userLocation.lat}\r\n            <br />\r\n            Latitude {userLocation.lng}\r\n          </h3>\r\n        ) : null}\r\n        <SearchBar userLocation={userLocation} />\r\n        <CategoryMenu />\r\n        <RestaurantList />\r\n        <Cart />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser($username: String!, $email: String!, $password: String!) {\r\n    addUser(username: $username, email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// export const ADD_ORDER = gql`\r\n//   mutation addOrder($products: [ID]!) {\r\n//     addOrder(products: $products) {\r\n//       purchaseDate\r\n//       products {\r\n//         _id\r\n//         name\r\n//         description\r\n//         price\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          {/* <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4> */}\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <h2 className=\"text-2xl\">Don't have an account yet? Sign up here!</h2>\r\n                <br/>\r\n                <label class=\"block text-grey-darker text-sm font-bold mb-2\" for=\"username\">\r\n                  Username\r\n                </label>\r\n                <input\r\n                  className=\"form-input shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <label class=\"block text-grey-darker text-sm font-bold mb-2\" for=\"email\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"form-input shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <label class=\"block text-grey-darker text-sm font-bold mb-2\" for=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"form-input shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <button\r\n                  className=\" shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mt-5 mb-3\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          {/* <h4 className=\"card-header bg-dark text-light p-2\">Login</h4> */}\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <h2 className=\"text-2xl\">Already have an account? Log in here!</h2>\r\n                <br/>\r\n                <label class=\"block text-grey-darker text-sm font-bold mb-2\" for=\"email\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"form-input shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <label class=\"block text-grey-darker text-sm font-bold mb-2\" for=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"form-input shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mb-3\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"shadow appearance-none border border-red rounded w-full py-2 px-3 text-grey-darker mt-5 mb-3\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Sign In\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// Node Modules\r\nimport React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n// Utilities\r\nimport Auth from '../utils/auth';\r\nimport { QUERY_ME } from '../utils/queries';\r\n// Components\r\nimport UserList from '../components/UserList';\r\n\r\nconst Profile = () => {\r\n  const { id } = useParams();\r\n\r\n  // Get current user\r\n  const { loading, data, error } = useQuery(QUERY_ME, {\r\n    variables: { id },\r\n  });\r\n\r\n  // Get a list of all users\r\n  // const { usersLoading, data: usersData } = useQuery(QUERY_USERS);\r\n\r\n  const user = data?.me || data?.user || {};\r\n  // const users = usersData?.users || [];\r\n\r\n  if (error) console.log(error);\r\n\r\n  // redirect to personal profile page if username is yours\r\n  if (Auth.loggedIn() && Auth.getProfile().data._id === id) {\r\n    return <Redirect to=\"/me\" />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <h4>Loading...</h4>;\r\n  }\r\n\r\n  if (!user?.username) {\r\n    return (\r\n      <h4>\r\n        You need to be logged in to see this. Use the navigation links above to\r\n        sign up or log in!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  // const renderUserList = () => {\r\n  //   if (usersLoading) return null;\r\n  //   // Only renders users who's profile we're not currently viewing\r\n  //   const notMeUsers = users.filter(o => o._id !== user._id);\r\n  //   return (\r\n  //     <div className=\"col-12 col-md-10 mb-5\">\r\n  //       <UserList users={notMeUsers} title=\"User List\" />\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n  const renderCurrentUserInfo = () => {\r\n    if (id) return null;\r\n    return (\r\n      <ul>\r\n        <li>username: {user.username}</li>\r\n        <li>email: {user.email}</li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex-row justify-center mb-3\">\r\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\r\n          Viewing {id ? `${user.username}'s` : 'your'} profile.\r\n        </h2>\r\n        {renderCurrentUserInfo()}\r\n        {/* {renderUserList()} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport '../index.css';\r\nconst About = () => {\r\n\r\nreturn (\r\n    <>\r\n    <div className=\"text-center container\">\r\n    <h1 className=\"text-4xl serif mb-5\">About Us</h1>\r\n    <img className=\"max-w-xs inline-block\" src=\"/images/delivery.jpg\" alt=\"delivery person\"/>\r\n    <p className=\"inline-block ml-8\">Placeholder Text  </p>\r\n    <br/>\r\n    <br/>\r\n    <p className=\"inline-block\">Placeholder Text</p>\r\n    <img className=\"inline-block max-w-xs\" src=\"/images/customer.jpg\" alt=\"customer\" />\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center text-3xl font-serif mb-5\"> Questions, comments, concerns? Contact us here!</h2>\r\n            <form className=\"text-center border-2 container max-w-md shadow-lg\">\r\n                <label>Name:</label><br />\r\n                <input className=\"border-2\" type=\"text\" /><br />\r\n                <label>Email:</label><br />\r\n                <input className=\"border-2\" type=\"text\" /><br />\r\n                <label>Comment:</label><br />\r\n                <textarea className=\"border-2\" rows=\"3\" /><br/>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst MenuItemCard = (item) => {\r\n    const { image, name, _id, price, description } = item;\r\n    const [state, dispatch] = useStoreContext();\r\n    const { cart } = state\r\n\r\n    const addToCart = () => {\r\n        const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n        if (itemInCart) {\r\n            dispatch({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: _id,\r\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n            });\r\n            idbPromise('cart', 'put', {\r\n                ...itemInCart,\r\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: ADD_TO_CART,\r\n                product: { ...item, purchaseQuantity: 1 }\r\n            });\r\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-10 shadow-lg container\">\r\n            <div className=\"flex\">\r\n                <div className=\"flex-1\">\r\n                    <img className=\"lg:max-w-md sm:max-w-xs m-3\" src={`/images/${image}`} alt=\"\" />\r\n                </div>\r\n                <div className='flex-1'>\r\n                    <div className=\"pl-3 pt-3\">\r\n                      <h2 className=\"font-bold text-3xl mb-5\">{name}</h2>\r\n                    <p className=\"mb-3 text-xl mr-8\">{description}</p>  \r\n                    <span className=\"inline text-2xl mb-5\">${price}</span>\r\n                    <br/>\r\n                      <button className=\"btn btn-lg btn-info m-2 inline mt-5\" onClick={addToCart}>Add to cart</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuItemCard;","import React, { useEffect } from 'react';\r\nimport MenuItemCard from '../MenuItemCard';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\n// import { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\nimport { QUERY_ALL_RESTAURANTS } from '../../utils/queries';\r\n// import { idbPromise } from '../../utils/helpers';\r\nimport spinner from '../../assets/spinner.gif';\r\n\r\nfunction MenuList() {\r\n      // const [state, dispatch] = useStoreContext();\r\n      // const { currentCategory } = state;\r\n      // const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n      const { id } = useParams();\r\n      const { loading, data } = useQuery(QUERY_ALL_RESTAURANTS);\r\n      const restaurants = data?.restaurants || [];\r\n      const currRestaurant = restaurants.find(restaurant => restaurant._id === id);\r\n      const currMenuList = currRestaurant.products;\r\n\r\n      // useEffect(() => {\r\n      //   if (data) {\r\n      //     dispatch({\r\n      //       type: UPDATE_PRODUCTS,\r\n      //       products: data.products,\r\n      //     });\r\n      //     data.products.forEach((restaurant) => {\r\n      //       idbPromise('products', 'put', restaurant);\r\n      //     });\r\n      //   } else if (!loading) {\r\n      //     idbPromise('products', 'get').then((products) => {\r\n      //       dispatch({\r\n      //         type: UPDATE_PRODUCTS,\r\n      //         products: products,\r\n      //       });\r\n      //     });\r\n      //   }\r\n      // }, [data, loading, dispatch]);\r\n\r\n      // function filterProducts() {\r\n      //   if (!currentCategory) {\r\n      //     return state.products;\r\n      //   }\r\n\r\n      //   return state.products.filter(\r\n      //     (restaurant) => restaurant.category._id === currentCategory\r\n      //   );\r\n      // }\r\n\r\n    return (\r\n        <div className=\"my-2\">\r\n            <h2 className=\"text-3xl ml-3\">Our Menu Items: </h2>\r\n            {currMenuList.length ? (\r\n                <div className=\"flex-row\">\r\n                    {currMenuList.map((restaurant) => (\r\n                        <MenuItemCard\r\n                            key={restaurant._id}\r\n                            _id={restaurant._id}\r\n                            image={restaurant.image}\r\n                            name={restaurant.name}\r\n                            description={restaurant.description}\r\n                            price={restaurant.price}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <h3>You haven't added any menu items yet!</h3>\r\n            )}\r\n            {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuList;\r\n","import React from 'react';\r\nimport MenuList from '../components/MenuList';\r\nimport Cart from \"../components/Cart\";\r\n\r\nfunction Restaurant() {\r\n  return (\r\n    <>\r\n      <MenuList />\r\n      <Cart />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Restaurant;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst Header = () => {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n\r\n  const renderControls = () => {\r\n    // If logged in show logout controls\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <>\r\n          <div className=\"bg-black\">\r\n            <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\r\n              <button>{Auth.getProfile().data.username}'s profile</button>\r\n            </Link>\r\n            <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\r\n              Logout\r\n            </button>\r\n            <Link className=\"btn btn-lg btn-info m-2\" to=\"/search\">\r\n              <button>Search</button>\r\n            </Link>\r\n          </div>\r\n\r\n\r\n        </>\r\n      );\r\n    }\r\n\r\n    /* <header>\r\n              <div className=\"nav-nav-bar flex-row justify-left align-left bg-black text-white\"> \r\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/viewProfile\">\r\n              <button>View Profile</button>\r\n              </Link>\r\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/deliveryTime\">\r\n              <button>Delivery Time</button>\r\n              </Link>\r\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/addRestaurant\">\r\n              <button>Add Restaurant</button>\r\n              </Link>\r\n              </div>\r\n          </header> */\r\n\r\n\r\n    // If logged out show login controls\r\n    return (\r\n      <>\r\n        <div className=\"bg-black nav-bar\">\r\n          <Link className=\"btn btn-lg btn-info ml-3\" to=\"/login\">\r\n            <button>Login</button>\r\n          </Link>\r\n          <Link className=\"btn btn-lg btn-light ml-3\" to=\"/signup\">\r\n            <button>Signup</button>\r\n          </Link>\r\n        </div>\r\n      </>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <header className=\"food-back container bg-dark text-light mb-4 py-3 flex-row align-center mb-8\">\r\n      <div className=\"flex-row justify-space-between-lg justify-center align-center\">\r\n        <Link to=\"/\">\r\n          <img className=\"logo\" src=\"/images/pgd-logo.jpg\" alt=\"PostGrubDash Logo\" />\r\n        </Link>\r\n        {renderControls()}\r\n\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInstagram, faFacebook, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => history.goBack()}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n        <div className=\"container max-width bg-gray-200 justify-items-center font-serif m-auto space-x-24\">\r\n          <Link to=\"/about\">\r\n        <h3 className=\"inline m-5 m-auto text-2xl object-center align-middle\">About Us</h3>\r\n        </Link>\r\n        <Link to=\"/contact\">\r\n        <h3 className=\"inline m-5 text-2xl align-middle\">Contact</h3>\r\n        </Link>\r\n        <FontAwesomeIcon className=\"fa-3x m-5 align-middle text-blue-600\" icon={faFacebook}/>\r\n        <FontAwesomeIcon className=\"fa-3x m-5 align-middle\" icon={faInstagram}/>\r\n        <FontAwesomeIcon className=\"fa-3x m-5 align-middle text-blue-400\" icon={faTwitter}/>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport { StoreProvider } from './utils/GlobalState';\r\n\r\nimport Home from './pages/Home';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Profile from './pages/Profile';\r\nimport About from './pages/About';\r\nimport Contact from './pages/Contact';\r\nimport Restaurant from './pages/Restaurant';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Cart from './pages/Cart';\r\n\r\n// Construct our main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div className=\"flex-column justify-flex-start min-100-vh\">\r\n          <StoreProvider>\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Route exact path=\"/me\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/cart\">\r\n              <Cart />\r\n            </Route>\r\n            <Route exact path=\"/users/:id\">\r\n              <Profile />\r\n             </Route> \r\n            <Route exact path=\"/restaurants/:id\">\r\n              <Restaurant />\r\n             </Route> \r\n            <Route exact path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route exact path=\"/contact\">\r\n              <Contact />\r\n            </Route>\r\n          </div>\r\n          <Footer />\r\n          </StoreProvider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}